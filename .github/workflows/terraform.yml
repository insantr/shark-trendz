name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: shark-trendz
  REGION: europe-southwest1
  REPOSITORY: mage-data-prep
  IMAGE_NAME: mageai

jobs:
  setup-build-publish-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v2

#    - name: Set up Docker Buildx
#      uses: docker/setup-buildx-action@v1

#    - name: Login to Google Artifact Registry
#      id: auth
#      uses: 'google-github-actions/auth@v2'
#      with:
#        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: Login to Google Artifact Registry2
      uses: 'docker/login-action@v1'
      with:
        registry: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}
        username: _json_key
        password: ${{ secrets.GCP_CREDENTIALS }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:latest


#    - name: Build and Push Container
#      run: |
#        docker build -t "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:latest" ./
#        docker push "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:latest"

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Initialize Terraform
      run: |
        cd terraform
        terraform init
      env:
        GOOGLE_CREDENTIALS: '${{ secrets.GCP_CREDENTIALS }}'

    # Checks that all Terraform configuration files adhere to a canonical format
#    - name: Terraform Format
#      run: |
#        cd terraform
#        terraform fmt -check

    - name: Apply Terraform
#      if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: |
        cd terraform
        terraform apply -auto-approve -input=false
      env:
        GOOGLE_CREDENTIALS: '${{ secrets.GCP_CREDENTIALS }}'
